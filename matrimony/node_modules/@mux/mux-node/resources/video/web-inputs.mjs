// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.
import { APIResource } from '@mux/mux-node/resource';
import { isRequestOptions } from '@mux/mux-node/core';
import * as WebInputsAPI from '@mux/mux-node/resources/video/web-inputs';
import { BasePage } from '@mux/mux-node/pagination';
export class WebInputs extends APIResource {
    /**
     * Create a new Web Input
     */
    create(body, options) {
        return this._client.post('/video/v1/web-inputs', { body, ...options })._thenUnwrap((obj) => obj.data);
    }
    /**
     * Retrieve a single Web Input's info
     */
    retrieve(webInputId, options) {
        return this._client.get(`/video/v1/web-inputs/${webInputId}`, options)._thenUnwrap((obj) => obj.data);
    }
    list(query = {}, options) {
        if (isRequestOptions(query)) {
            return this.list({}, query);
        }
        return this._client.getAPIList('/video/v1/web-inputs', WebInputListResponsesBasePage, {
            query,
            ...options,
        });
    }
    /**
     * Deletes a Web Input and all its data
     */
    delete(webInputId, options) {
        return this._client.delete(`/video/v1/web-inputs/${webInputId}`, {
            ...options,
            headers: { Accept: '*/*', ...options?.headers },
        });
    }
    /**
     * Launches the browsers instance, loads the URL specified, and then starts
     * streaming to the specified Live Stream.
     */
    launch(webInputId, options) {
        return this._client.put(`/video/v1/web-inputs/${webInputId}/launch`, options)._thenUnwrap((obj) => obj.data);
    }
    /**
     * Reloads the page that a Web Input is displaying.
     *
     * Note: Using this when the Web Input is streaming will display the page
     * reloading.
     */
    reload(webInputId, options) {
        return this._client.put(`/video/v1/web-inputs/${webInputId}/reload`, options)._thenUnwrap((obj) => obj.data);
    }
    /**
     * Ends streaming to the specified Live Stream, and then shuts down the Web Input
     * browser instance.
     */
    shutdown(webInputId, options) {
        return this._client.put(`/video/v1/web-inputs/${webInputId}/shutdown`, options)._thenUnwrap((obj) => obj.data);
    }
    /**
     * Changes the URL that a Web Input loads when it launches.
     *
     * Note: This can only be called when the Web Input is idle.
     */
    updateURL(webInputId, body, options) {
        return this._client.put(`/video/v1/web-inputs/${webInputId}/url`, { body, ...options })._thenUnwrap((obj) => obj.data);
    }
}
export class WebInputListResponsesBasePage extends BasePage {
}
(function (WebInputs) {
    WebInputs.WebInputListResponsesBasePage = WebInputsAPI.WebInputListResponsesBasePage;
})(WebInputs || (WebInputs = {}));
//# sourceMappingURL=web-inputs.mjs.map